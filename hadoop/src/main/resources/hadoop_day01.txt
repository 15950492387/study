1. MapReduce的流程
	1.1 粗略的来说
		数据输入 ----> map处理 ----> shuffle ----> reduce处理 ----> 数据输出
	1.2
2. 切片
    2.1 数据块
        描述的是数存储到hdfs时，从物理上将文件切分成一个一个的块
    2.2 数据切片
        描述的是数据计算时从逻辑上将文件分成一个一个的片，时间上每个切片就是记录了一下我要读取哪个文件的哪一部分数据
    2.3 切片与mapTask的关系
        有多少个切片，就需要启动多少个mapTask来处理
        一个mapTask处理一个切片的数据。
    2.4 切片的大小
        默认情况下  切片大小等于块大小
3. InputFormat 数据输入
    3.1 重要的方法：
        getSplits(): 生成切片
        createRecordReader(): 创建RecordReader对象，负责数据的读取、
    3.2 子抽象类FileInputFormat
        1) TextInputFormat 是默认使用的InputFormat 类
           @1 createRecordReader()
           @2 isSpilitable(): 重写了该方法，对各种压缩文件进行了判断是否可切分。
           @3 切片的规则用的是FileInputFormat中的实现
        2) CombineTextInputFormat 解决小文件场景生成过多切片的问题
4. shuffle 机制
    4.1 shuffle 的位置
        Map方法之后，reduce方法之前的方法称为shuffle
    4.2 shuffle 的具体划分：
        map ----> sort(map阶段) ----> copy(reduce阶段) ---->sort(reduce阶段) ----> reduce
